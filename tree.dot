digraph filesystem {
    rankdir=LR; // Top to bottom layout
    nodesep=0.1;  // Decreases the space between nodes at the same rank (horizontal spacing)
    ranksep=0.3;  // Increases the space between ranks (vertical spacing)
    node [shape=box, style=filled, color=lightblue]; // Box shape for nodes
    edge [color=gray]; // Gray color for edges
    "ReacType" -> "CHANGE_LOG.md";
    "ReacType" -> "CODE_OF_CONDUCT.md";
    "ReacType" -> "Dockerfile";
    "ReacType" -> "Dockerrun.aws.json";
    "ReacType" -> "LICENSE.md";
    "ReacType" -> "Procfile";
    "ReacType" -> "README.md";
    "ReacType" -> "__tests__";
    "__tests__" -> "BottomTabs.test.tsx";
    "__tests__" -> "DragAndDrop.test.tsx";
    "__tests__" -> "NavBar.test.tsx";
    "__tests__" -> "componentReducer.test.ts";
    "__tests__" -> "contextReducer.test.js";
    "__tests__" -> "gql.projects.test.ts";
    "__tests__" -> "helper.test.tsx";
    "__tests__" -> "marketplace.test.tsx";
    "__tests__" -> "playwright";
    "playwright" -> "example.spec.ts";
    "__tests__" -> "projects.test.ts";
    "__tests__" -> "server.test.tsx";
    "__tests__" -> "signIn.test.tsx";
    "__tests__" -> "spec.ts";
    "__tests__" -> "stateManagementReducer.test.js";
    "__tests__" -> "tree.test.tsx";
    "__tests__" -> "userAuth.test.ts";
    "ReacType" -> "amplify";
    "amplify" -> "README.md";
    "amplify" -> "backend";
    "backend" -> "auth";
    "auth" -> "reactype24e8d371";
    "reactype24e8d371" -> "cli-inputs.json";
    "backend" -> "backend-config.json";
    "backend" -> "storage";
    "storage" -> "ReacTypeMktImg";
    "ReacTypeMktImg" -> "cli-inputs.json";
    "backend" -> "tags.json";
    "backend" -> "types";
    "types" -> "amplify-dependent-resources-ref.d.ts";
    "amplify" -> "cli.json";
    "amplify" -> "hooks";
    "hooks" -> "README.md";
    "ReacType" -> "app";
    "app" -> "src";
    "src" -> "Dashboard";
    "Dashboard" -> "NavbarDash.tsx";
    "Dashboard" -> "Project.tsx";
    "Dashboard" -> "ProjectContainer.tsx";
    "Dashboard" -> "gqlStrings.ts";
    "Dashboard" -> "styles.css";
    "src" -> "components";
    "components" -> "App.tsx";
    "components" -> "ContextAPIManager";
    "ContextAPIManager" -> "AssignTab";
    "AssignTab" -> "AssignContainer.tsx";
    "AssignTab" -> "components";
    "components" -> "ComponentDropDrown.tsx";
    "components" -> "ComponentTable.tsx";
    "components" -> "ContextDropDown.tsx";
    "components" -> "ContextTable.tsx";
    "ContextAPIManager" -> "ContextManager.tsx";
    "ContextAPIManager" -> "CreateTab";
    "CreateTab" -> "CreateContainer.tsx";
    "CreateTab" -> "components";
    "components" -> "AddContextForm.tsx";
    "components" -> "AddDataForm.tsx";
    "components" -> "DataTable.tsx";
    "ContextAPIManager" -> "DisplayTab";
    "DisplayTab" -> "DisplayContainer.tsx";
    "components" -> "StateManagement";
    "StateManagement" -> "CreateTab";
    "CreateTab" -> "CreateContainer.tsx";
    "CreateTab" -> "components";
    "components" -> "StatePropsPanel.tsx";
    "components" -> "TableParentProps.tsx";
    "components" -> "TablePassedInProps.tsx";
    "components" -> "TableStateProps.tsx";
    "StateManagement" -> "DisplayTab";
    "DisplayTab" -> "DataTable.tsx";
    "DisplayTab" -> "DisplayContainer.tsx";
    "DisplayTab" -> "Tree.tsx";
    "DisplayTab" -> "useResizeObserver.ts";
    "StateManagement" -> "StateManagement.tsx";
    "src" -> "bottom";
    "bottom" -> "BottomPanel.tsx";
    "bottom" -> "BottomTabs.tsx";
    "bottom" -> "ChatRoom.tsx";
    "bottom" -> "CodePreview.tsx";
    "bottom" -> "CreationPanel.tsx";
    "bottom" -> "StylesEditor.tsx";
    "bottom" -> "UseStateModal.tsx";
    "bottom" -> "VideoMeeting.tsx";
    "bottom" -> "VideoMeetingControl.tsx";
    "src" -> "form";
    "form" -> "Selector.tsx";
    "src" -> "left";
    "left" -> "ComponentDrag.tsx";
    "left" -> "ComponentsContainer.tsx";
    "left" -> "ContentArea.tsx";
    "left" -> "DragDropPanel.tsx";
    "left" -> "ElementsContainer.tsx";
    "left" -> "HTMLItem.tsx";
    "left" -> "HTMLPanel.tsx";
    "left" -> "ProfilePage.tsx";
    "left" -> "RoomsContainer.tsx";
    "left" -> "Settings.tsx";
    "left" -> "Sidebar.tsx";
    "src" -> "login";
    "login" -> "FBPassWord.tsx";
    "login" -> "SignIn.tsx";
    "login" -> "SignUp.tsx";
    "src" -> "main";
    "main" -> "AddLink.tsx";
    "main" -> "AddRoute.tsx";
    "main" -> "Arrow.tsx";
    "main" -> "Canvas.tsx";
    "main" -> "CanvasContainer.tsx";
    "main" -> "DeleteButton.tsx";
    "main" -> "DemoRender.tsx";
    "main" -> "DirectChildComponent.tsx";
    "main" -> "DirectChildHTML.tsx";
    "main" -> "DirectChildHTMLNestable.tsx";
    "main" -> "IndirectChild.tsx";
    "main" -> "RouteLink.tsx";
    "main" -> "SeparatorChild.tsx";
    "src" -> "marketplace";
    "marketplace" -> "MarketplaceCard.tsx";
    "marketplace" -> "MarketplaceCardContainer.tsx";
    "marketplace" -> "Searchbar.tsx";
    "src" -> "right";
    "right" -> "ComponentPanel.tsx";
    "right" -> "ComponentPanelItem.tsx";
    "right" -> "ComponentPanelRoutingItem.tsx";
    "right" -> "DeleteProjects.tsx";
    "right" -> "ExportButton.tsx";
    "right" -> "LoginButton.tsx";
    "right" -> "OpenProjects.tsx";
    "right" -> "ProjectManager.tsx";
    "right" -> "SaveProjectButton.tsx";
    "right" -> "SimpleModal.tsx";
    "right" -> "createModal.tsx";
    "src" -> "top";
    "top" -> "NavBar.tsx";
    "top" -> "NavBarButtons.tsx";
    "top" -> "NewExportButton.tsx";
    "top" -> "PublishModal.tsx";
    "src" -> "constants";
    "constants" -> "ErrorMessages.ts";
    "constants" -> "ItemTypes.ts";
    "constants" -> "Styling.ts";
    "src" -> "containers";
    "containers" -> "AppContainer.tsx";
    "containers" -> "CustomizationPanel.tsx";
    "containers" -> "LeftContainer.tsx";
    "containers" -> "MainContainer.tsx";
    "containers" -> "MarketplaceContainer.tsx";
    "src" -> "helperFunctions";
    "helperFunctions" -> "auth.ts";
    "helperFunctions" -> "changePositionValidation.ts";
    "helperFunctions" -> "cloneDeep.ts";
    "helperFunctions" -> "combineStyles.ts";
    "helperFunctions" -> "componentNestValidation.ts";
    "helperFunctions" -> "cssRefresh.tsx";
    "helperFunctions" -> "esbuildService.ts";
    "helperFunctions" -> "generateCode.ts";
    "helperFunctions" -> "manageSeparators.ts";
    "helperFunctions" -> "projectGetSaveDel.ts";
    "helperFunctions" -> "randomPassword.ts";
    "helperFunctions" -> "renderChildren.tsx";
    "helperFunctions" -> "socket.ts";
    "helperFunctions" -> "zipFiles.ts";
    "src" -> "index.tsx";
    "src" -> "interfaces";
    "interfaces" -> "Interfaces.ts";
    "interfaces" -> "declarations.d.ts";
    "interfaces" -> "global.ts";
    "src" -> "plugins";
    "plugins" -> "fetch-plugin.ts";
    "plugins" -> "unpkg-path-plugin.ts";
    "src" -> "public";
    "public" -> "ezgif.com-gif-maker.gif";
    "public" -> "favicon-original.png";
    "public" -> "icons";
    "icons" -> "mac";
    "mac" -> "icon.icns";
    "icons" -> "png";
    "png" -> "128x128.png";
    "png" -> "24x24.png";
    "png" -> "256x256.png";
    "png" -> "32x32.png";
    "png" -> "48x48.png";
    "png" -> "512x512.png";
    "png" -> "64x64.png";
    "png" -> "96x96.png";
    "icons" -> "win";
    "win" -> "dark-mode.ico";
    "win" -> "favIcon.ico";
    "win" -> "icon-original.ico";
    "win" -> "image.png";
    "win" -> "light-mode.ico";
    "win" -> "logo-original.png";
    "win" -> "logo-two.png";
    "win" -> "logo.png";
    "win" -> "reactTypeV20.ico";
    "win" -> "scrollup.png";
    "win" -> "white-reactype-logo-1.psd";
    "public" -> "index-prod.ejs";
    "public" -> "index.ejs";
    "public" -> "styles";
    "styles" -> "globalDefaultStyles.ts";
    "styles" -> "style.css";
    "styles" -> "theme.ts";
    "src" -> "redux";
    "redux" -> "HTMLTypes.ts";
    "redux" -> "reducers";
    "reducers" -> "rootReducer.ts";
    "reducers" -> "slice";
    "slice" -> "appStateSlice.ts";
    "slice" -> "codePreviewSlice.ts";
    "slice" -> "contextReducer.ts";
    "slice" -> "roomSlice.ts";
    "slice" -> "styleSlice.ts";
    "redux" -> "store.ts";
    "src" -> "serverConfig.js";
    "src" -> "tree";
    "tree" -> "TreeChart.tsx";
    "tree" -> "useResizeObserver.ts";
    "src" -> "tutorial";
    "tutorial" -> "CSSEditor.tsx";
    "tutorial" -> "Canvas.tsx";
    "tutorial" -> "CodePreview.tsx";
    "tutorial" -> "ComponentTree.tsx";
    "tutorial" -> "Customization.tsx";
    "tutorial" -> "HtmlElements.tsx";
    "tutorial" -> "KeyboardShortcuts.tsx";
    "tutorial" -> "Pages.tsx";
    "tutorial" -> "ReusableComponents.tsx";
    "tutorial" -> "RouteLinks.tsx";
    "tutorial" -> "States.tsx";
    "tutorial" -> "Styling.tsx";
    "tutorial" -> "Tutorial.tsx";
    "tutorial" -> "TutorialPage.tsx";
    "src" -> "utils";
    "utils" -> "createApplication.util.ts";
    "utils" -> "createFiles.util.ts";
    "utils" -> "createGatsbyApp.util.ts";
    "utils" -> "createGatsbyFiles.util.ts";
    "utils" -> "createNextApp.util.ts";
    "utils" -> "createNextFiles.util.ts";
    "utils" -> "createNonce.ts";
    "utils" -> "createTestSuite.util.ts";
    "utils" -> "createTestSuiteClassic.util.ts";
    "utils" -> "createTestSuiteNext.util.ts";
    "utils" -> "exportProject.util.ts";
}
